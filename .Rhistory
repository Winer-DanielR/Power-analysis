ggplot(data=ARMAdata, aes(x=year, y=evochange, colour=version)) + geom_point() + geom_line() + xlab("Year") + ylab("Change in Carbonaria Morph Frequency") + theme_few()
ggplot(data=ARMAdata, aes(x=year, y=evochange, colour=version)) + geom_point() + geom_line() + xlab("Year") + ylab("Change in Carbonaria Morph Frequency") + theme_few() + scale_colour_manual(values = c("observed" = "#33CCCC", "predicted" = "#FFCC00"))
ggplot(data=ARMAdata, aes(x=year, y=evochange, colour=version)) + geom_point() + geom_line(lwd=0.75) + xlab("Year") + ylab("Change in Carbonaria Morph Frequency") + theme_few() + scale_colour_manual(values = c("observed" = "#33CCCC", "predicted" = "#FFCC00"))
ggplot(data=ARMAdata, aes(x=year, y=evochange, colour=version)) + geom_point() + geom_line(lwd=1) + xlab("Year") + ylab("Change in Carbonaria Morph Frequency") + theme_few() + scale_colour_manual(values = c("observed" = "#33CCCC", "predicted" = "#FFCC00"))
ggplot(data=ARMAdata, aes(x=year, y=evochange, colour=version)) + geom_point() + geom_line(lwd=1) + xlab("Year") + ylab("Change in Carbonaria Morph Frequency") + theme_few() + scale_colour_manual(values = c("observed" = "#00CCCC", "predicted" = "#FFCC00"))
ggplot(data=ARMAdata, aes(x=year, y=evochange, colour=version)) + geom_point() + geom_line(lwd=1) + xlab("Year") + ylab("Change in Carbonaria Morph Frequency") + theme_few() + scale_colour_manual(values = c("observed" = "#009999", "predicted" = "#FFCC00"))
ggplot(data=ARMAdata, aes(x=year, y=evochange, colour=version)) + geom_point() + geom_line(lwd=1) + xlab("Year") + ylab("Change in Carbonaria Morph Frequency") + theme_few() + scale_colour_manual(values = c("observed" = "#339999", "predicted" = "#FFCC00"))
ggplot(data=ARMAdata, aes(x=year, y=evochange, colour=version)) + geom_point() + geom_line(lwd=1) + xlab("Year") + ylab("Change in Carbonaria Morph Frequency") + theme_few() + scale_colour_manual(values = c("observed" = "#00CCCC", "predicted" = "#FFCC00"))
ggplot(data=ARMAdata, aes(x=year, y=evochange, colour=version)) + geom_point() + geom_line(lwd=1) + xlab("Year") + ylab("Change in Carbonaria Morph Frequency") + theme_few() + scale_colour_manual(values = c("observed" = "#FFCC00", "predicted" = "#00CCCC"))
ggplot(data=ARMAdata, aes(x=year, y=evochange, colour=version)) + geom_point() + geom_line(lwd=1) + xlab("Year") + ylab("Change in Carbonaria Morph Frequency") + theme_few() + scale_colour_manual(values = c("observed" = "#0099CC", "predicted" = "#3300CC"))
ggplot(data=ARMAdata, aes(x=year, y=evochange, colour=version)) + geom_point() + geom_line(lwd=1) + xlab("Year") + ylab("Change in Carbonaria Morph Frequency") + theme_few() + scale_colour_manual(values = c("observed" = "#00CCCC", "predicted" = "#3300CC"))
ggplot(data=ARMAdata, aes(x=year, y=evochange, colour=version)) + geom_point() + geom_line(lwd=1.3) + xlab("Year") + ylab("Change in Carbonaria Morph Frequency") + theme_few() + scale_colour_manual(values = c("observed" = "#33CCCC", "predicted" = "#3300CC"))
ggplot(data=ARMAdata, aes(x=year, y=evochange, colour=version)) + geom_point() + geom_line(lwd=1.2) + xlab("Year") + ylab("Change in Carbonaria Morph Frequency") + theme_few() + scale_colour_manual(values = c("observed" = "#33CCCC", "predicted" = "#3300CC"))
ggplot(data=ARMAdata, aes(x=year, y=evochange, colour=version)) + geom_point() + geom_line(lwd=1.1) + xlab("Year") + ylab("Change in Carbonaria Morph Frequency") + theme_few() + scale_colour_manual(values = c("observed" = "#33CCCC", "predicted" = "#3300CC"))
ggplot(data=ARMAdata, aes(x=year, y=evochange, colour=version)) + geom_point() + geom_line(lwd=1.3) + xlab("Year") + ylab("Change in Carbonaria Morph Frequency") + theme_few() + scale_colour_manual(values = c("observed" = "#33FFFF", "predicted" = "#3300CC"))
ggplot(data=ARMAdata, aes(x=year, y=evochange, colour=version)) + geom_point() + geom_line(lwd=1.3) + xlab("Year") + ylab("Change in Carbonaria Morph Frequency") + theme_few() + scale_colour_manual(values = c("observed" = "#66CCFF", "predicted" = "#3300CC"))
ggplot(data=ARMAdata, aes(x=year, y=evochange, colour=version)) + geom_point() + geom_line(lwd=1.3) + xlab("Year") + ylab("Change in Carbonaria Morph Frequency") + theme_few() + scale_colour_manual(values = c("observed" = "#33CCFF", "predicted" = "#3300CC"))
ggplot(data=ARMAdata, aes(x=year, y=evochange, colour=version)) + geom_point() + geom_line(lwd=1.1) + xlab("Year") + ylab("Change in Carbonaria Morph Frequency") + theme_few() + scale_colour_manual(values = c("observed" = "#00CCFF", "predicted" = "#3300CC"))
ggplot(data=ARMAdata, aes(x=year, y=evochange, colour=version)) + geom_point() + geom_line(lwd=1.1) + xlab("Year") + ylab("Change in Carbonaria Morph Frequency") + theme_few() + scale_colour_manual(values = c("observed" = "#33CCCC", "predicted" = "#3300CC"))
ggplot(data=ARMAdata, aes(x=year, y=evochange, colour=version)) + geom_point() + geom_line(lwd=1.1) + xlab("Year") + ylab("Change in Carbonaria Morph Frequency") + theme_few() + scale_colour_manual(values = c("observed" = "#00CCCC", "predicted" = "#3300CC"))
library(readxl)
ARMAdata <- read_excel("Meta-Analysis/Raw_Data/ARMAdata.xlsx",
sheet = "Prediction")
View(ARMAdata)
source('~/.active-rstudio-document', echo=TRUE)
library(readxl)
ARMAdata <- read_excel("Meta-Analysis/Raw_Data/ARMAdata.xlsx",
sheet = "Prediction")
View(ARMAdata)
source('~/.active-rstudio-document', echo=TRUE)
library(readxl)
ARMAdata <- read_excel("Meta-Analysis/Raw_Data/ARMAdata.xlsx",
sheet = "Prediction")
View(ARMAdata)
source('~/.active-rstudio-document', echo=TRUE)
library(readxl)
ARMAdata <- read_excel("Meta-Analysis/Raw_Data/ARMAdata.xlsx",
sheet = "Prediction")
View(ARMAdata)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
library(readxl)
ARMAdata <- read_excel("Meta-Analysis/Raw_Data/ARMAdata.xlsx",
sheet = "Prediction")
View(ARMAdata)
source('~/.active-rstudio-document', echo=TRUE)
library(readxl)
ARMAdata <- read_excel("Meta-Analysis/Raw_Data/ARMAdata.xlsx",
sheet = "Prediction")
View(ARMAdata)
source('~/.active-rstudio-document', echo=TRUE)
library(readxl)
ARMAdata <- read_excel("Meta-Analysis/Raw_Data/ARMAdata.xlsx",
sheet = "Prediction")
View(ARMAdata)
source('~/.active-rstudio-document', echo=TRUE)
library(readxl)
ARMAdata <- read_excel("Meta-Analysis/Raw_Data/ARMAdata.xlsx",
sheet = "Prediction")
View(ARMAdata)
source('~/.active-rstudio-document', echo=TRUE)
library(readxl)
ARMAdata <- read_excel("Meta-Analysis/Raw_Data/ARMAdata.xlsx",
sheet = "Prediction")
View(ARMAdata)
source('~/.active-rstudio-document', echo=TRUE)
library(readxl)
ARMAdata <- read_excel("Meta-Analysis/Raw_Data/ARMAdata.xlsx",
sheet = "Prediction")
View(ARMAdata)
source('~/.active-rstudio-document', echo=TRUE)
library(readxl)
Tdata <- read_excel("Meta-Analysis/Raw_Data/Tdata.xlsx",
sheet = "all")
View(Tdata)
library(ggplot2)
ggplot(data =Tdata, aes(x=change.t, y= change.f))
ggplot(data =Tdata, aes(x=change.t, y= change.f)) +geom_point()
library(readxl)
Tdata <- read_excel("Meta-Analysis/Raw_Data/Tdata.xlsx",
sheet = "rouzic", col_types = c("blank",
"blank", "blank", "blank", "blank",
"numeric", "numeric", "numeric",
"numeric"))
View(Tdata)
library(readxl)
Rouzic <- read_excel("Meta-Analysis/Raw_Data/Tdata.xlsx",
sheet = "rouzic", col_types = c("blank",
"blank", "blank", "blank", "blank",
"numeric", "numeric", "numeric",
"numeric"))
View(Rouzic)
na.omit(Rouzic)
Rouzic
Rouzic.N  <- na.omit(Rouzic)
View(Rouzic.N)
View(Rouzic)
View(Rouzic.N)
library(readxl)
Fisher <- read_excel("Meta-Analysis/Raw_Data/Tdata.xlsx",
sheet = "fisher", col_types = c("blank",
"blank", "blank", "blank", "blank",
"numeric", "blank", "blank", "blank",
"numeric", "text"))
View(Fisher)
ggplot(data=Fisher, aes(x=change.t, y=change.f, colour=morph)) + geom_point()
ggplot(data=Fisher, aes(x=change.t, y=change.f, colour=morph)) + geom_point() + stat_smooth(method=lm, group=morph)
ggplot(data=Fisher, aes(x=change.t, y=change.f, colour=morph)) + geom_point() + geom_smooth(method="lm")
ggplot(data=Fisher, aes(x=change.t, y=change.f)) + geom_point(colour=morph) + geom_smooth(method="lm")
ggplot(data=Fisher, aes(x=change.t, y=change.f)) + geom_point(aes(colour=morph)) + geom_smooth(method="lm")
ggplot(data=Fisher, aes(x=change.t, y=change.f)) + geom_point(aes(colour=morph)) + geom_smooth(method="lm") + geom_smooth(aes(colour=morph, group=morph))
ggplot(data=Fisher, aes(x=change.t, y=change.f)) + geom_point(aes(colour=morph)) + geom_smooth(method="lm") + geom_smooth(method="lm", aes(colour=morph, group=morph))
library(readxl)
Tdata <- read_excel("Meta-Analysis/Raw_Data/Tdata.xlsx",
sheet = "all")
View(Tdata)
ggplot(data=Tdata, aes(x = change.t, y = change.f)) + geom_point() + geom_smooth(method="lm") + facet_grid(~paper, nrow=2)
ggplot(data=Tdata, aes(x = change.t, y = change.f)) + geom_point() + geom_smooth(method="lm") + facet_grid(~paper)
Fisher <- Tdata[1:7,]
Fisher
Gillespie <- Tdata[8:11,]
Harris <- Tdata[12:30,]
Johnson <- Tdata[31:63,]
Schemske <- Tdata[64:73,]
Karrell <- Tdata[75:83,]
Lepetz <- Tdata[84:93,]
Grant <- Tdata[94:129,]
Cook <- Tdata[130:172,]
ggplot(data=Fisher, aes(x=change.t, y= change.f)) +geom_point() + geom_smooth(method="lm")
ggplot(data=Fisher, aes(x=change.t, y= change.f)) +geom_point() + geom_smooth(method="lm") + theme_few + xlab("Change in Time") + ylab("Change in Dominula Frequency")
ggplot(data=Fisher, aes(x=change.t, y= change.f)) +geom_point() + geom_smooth(method="lm") + theme_few() + xlab("Change in Time") + ylab("Change in Dominula Frequency")
ggplot(data=Fisher, aes(x=change.t, y= change.f)) +geom_point() + geom_smooth(method="lm", aes(colour="purple")) + theme_few() + xlab("Change in Time") + ylab("Change in Dominula Frequency")
ggplot(data=Fisher, aes(x=change.t, y= change.f)) +geom_point() + geom_smooth(method="lm") + theme_few() + xlab("Change in Time") + ylab("Change in Dominula Frequency")
ggplot(data=Fisher, aes(x=change.t, y= change.f)) +geom_point() + geom_smooth(method="lm", colour="purple") + theme_few() + xlab("Change in Time") + ylab("Change in Dominula Frequency")
library(readxl)
Tdata <- read_excel("Meta-Analysis/Raw_Data/Tdata.xlsx",
sheet = "all")
View(Tdata)
source('~/.active-rstudio-document', echo=TRUE)
install.packages(gridExtra)
install.packages("gridExtra")
combo.box <- grid.arrange(Cook.plot, Fisher.plot)
library(gridExtra)
combo <- grid.arrange(Cook.plot, Fisher.plot, Gillespie.plot, Grant,Grant.plot)
combo <- grid.arrange(Cook.plot, Fisher.plot, Gillespie.plot, ,Grant.plot)
combo <- grid.arrange(Cook.plot, Fisher.plot, Gillespie.plot,Grant.plot)
combo <- grid.arrange(Cook.plot, Fisher.plot, Gillespie.plot,Grant.plot, Harris.plot, Johnson.plot, Karrell.plot, Lepetz.plot, Rouzic.plot, Schemske.plot)
combo <- grid.arrange(Cook.plot, Fisher.plot, Gillespie.plot,Grant.plot)
combo1 <-  grid.arrange(Harris.plot, Johnson.plot, Karrell.plot, Lepetz.plot, Rouzic.plot, Schemske.plot)
combo1 <-  grid.arrange(Harris.plot, Johnson.plot, Karrell.plot, Lepetz.plot)
combo2 <- grid.arrange(Rouzic.plot,  Schemske.plot)
combo1
combo1
View(combo1)
combo1 <-  grid.arrange(Harris.plot, Johnson.plot, Karrell.plot, Lepetz.plot)
combo <- grid.arrange(Cook.plot, Fisher.plot, Gillespie.plot,Grant.plot)
combo1 <-  grid.arrange(Harris.plot, Johnson.plot, Karrell.plot, Lepetz.plot)
combo2 <- grid.arrange(Rouzic.plot,  Schemske.plot)
combo <- grid.arrange(Cook.plot, Fisher.plot, Gillespie.plot,Grant.plot)
ggplot(data=Tdata, aes(x=change.t, y= change.f)) +geom_point() + geom_smooth(method="lm", colour="purple") + theme_few() + xlab("Change in Time") + ylab("Change in Trait Frequency")
ggplot(data=Tdata, aes(x=change.t, y= change.f)) +geom_point(size=1) + geom_smooth(method="lm", colour="purple") + theme_few() + xlab("Change in Time") + ylab("Change in Trait Frequency")
ggplot(data=Tdata, aes(x=change.t, y= change.f)) + geom_point(alpha=0.1) + geom_smooth(method="lm", colour="purple") + theme_few() + xlab("Change in Time") + ylab("Change in Trait Frequency")
ggplot(data=Tdata, aes(x=change.t, y= change.f)) + geom_point(alpha=0.1, colour ="black") + geom_smooth(method="lm", colour="purple") + theme_few() + xlab("Change in Time") + ylab("Change in Trait Frequency")
ggplot(data=Tdata, aes(x=change.t, y= change.f)) + geom_point(alpha=0.2, colour ="black") + geom_smooth(method="lm", colour="purple") + theme_few() + xlab("Change in Time") + ylab("Change in Trait Frequency")
ggplot(data=Tdata, aes(x=change.t, y= change.f)) + geom_point(alpha=0.3, colour ="black") + geom_smooth(method="lm", colour="purple") + theme_few() + xlab("Change in Time") + ylab("Change in Trait Frequency")
ggplot(data=Tdata, aes(x=change.t, y= change.f)) + geom_point(alpha=0.5, colour ="black") + geom_smooth(method="lm", colour="purple") + theme_few() + xlab("Change in Time") + ylab("Change in Trait Frequency")
Cook.plot
Fisher.plot
Cook.plot
Gillespie.plot
Grant.plot
Harris.plot
Johnson.plot
Karrell.plot
Lepetz.plot
Rouzic.plot
Schemske.plot
ggplot(data=Tdata, aes(x=change.t, y= change.f)) + geom_point(alpha=0.5, colour ="black") + geom_smooth(method="lm", colour="purple", forumula = y ~ x) + theme_few() + xlab("Change in Time") + ylab("Change in Trait Frequency")
ggplot(data=Tdata, aes(x=change.t, y= change.f)) + geom_point(alpha=0.5, colour ="black") + geom_smooth(method="lm", colour="purple", forumula = change.f ~ x  change.t) + theme_few() + xlab("Change in Time") + ylab("Change in Trait Frequency")
lm.eq <- function(df)
lm_eqn <- function(Tdata){
m <- lm(change.f ~ change.t, Tdata);
eq <- substitute(italic(change.f) == a + b %.% italic(change.f)*","~~italic(r)^2~"="~r2,
list(a = format(coef(m)[1], digits = 2),
b = format(coef(m)[2], digits = 2),
r2 = format(summary(m)$r.squared, digits = 3)))
as.character(as.expression(eq));
}
View(lm_eqn)
ggplot(data=Tdata, aes(x=change.t, y= change.f)) + geom_point(alpha=0.5, colour ="black") + geom_smooth(method="lm", colour="purple") + theme_few() + xlab("Change in Time") + ylab("Change in Trait Frequency") + geom_text(x = 25, y = 300, label = lm_eqn(df), parse = TRUE)
ggplot(data=Tdata, aes(x=change.t, y= change.f)) + geom_point(alpha=0.5, colour ="black") + geom_smooth(method="lm", colour="purple") + theme_few() + xlab("Change in Time") + ylab("Change in Trait Frequency")
ggplot(data=Tdata, aes(x=change.t, y= change.f)) + geom_point(alpha=0.5, colour ="black") + geom_smooth(method="lm", colour="purple") + theme_few() + xlab("Change in Time") + ylab("Change in Trait Frequency") + geom_text(x = 25, y = 300, label = lm_eqn(df), parse = TRUE)
ggplot(data=Tdata, aes(x=change.t, y= change.f)) + geom_point(alpha=0.5, colour ="black") + geom_smooth(method="lm", colour="purple") + theme_few() + xlab("Change in Time") + ylab("Change in Trait Frequency") + geom_text(label = lm_eqn(df), parse = TRUE)
ggplot(data=Tdata, aes(x=change.t, y= change.f)) + geom_point(alpha=0.5, colour ="black") + geom_smooth(method="lm", colour="purple") + theme_few() + xlab("Change in Time") + ylab("Change in Trait Frequency")
ggplot(data=Tdata, aes(x=change.t, y= change.f)) + geom_point(alpha=0.5, colour ="black") + geom_smooth(method="lm", colour="purple") + theme_few() + xlab("Change in Time") + ylab("Change in Trait Frequency") +stat_smooth(geom="text", method="lm", hjust=0, parse=TRUE)
ggplot(data=Tdata, aes(x=change.t, y= change.f)) + geom_point(alpha=0.5, colour ="black") + geom_smooth(method="lm", colour="purple") + theme_few() + xlab("Change in Time") + ylab("Change in Trait Frequency") +stat_smooth(geom="text", method="lm", hjust=0, parse=TRUE, label="R")
ggplot(data=Tdata, aes(x=change.t, y= change.f)) + geom_point(alpha=0.5, colour ="black") + geom_smooth(method="lm", colour="purple") + theme_few() + xlab("Change in Time") + ylab("Change in Trait Frequency") +stat_smooth(geom="text", method="lm", hjust=0, parse=TRUE, label=null)
ggplot(data=Tdata, aes(x=change.t, y= change.f)) + geom_point(alpha=0.5, colour ="black") + geom_smooth(method="lm", colour="purple") + theme_few() + xlab("Change in Time") + ylab("Change in Trait Frequency") +stat_smooth(geom="text", method="lm", hjust=0, parse=TRUE, label="null")
ggplot(data=Tdata, aes(x=change.t, y= change.f)) + geom_point(alpha=0.5, colour ="black") + geom_smooth(method="lm", colour="purple") + theme_few() + xlab("Change in Time") + ylab("Change in Trait Frequency") +stat_smooth(geom="text", method="lm", hjust=0, parse=TRUE, label=FALSE)
library(readxl)
ARMAdata <- read_excel("Meta-Analysis/Raw_Data/ARMAdata.xlsx",
sheet = "R values")
View(ARMAdata)
timeplot <- ggplot(data = ARMAdata, aes(x = years, y = R2)) + geom_point(shape = "diamond", size = 1.5) + ylab (expression(paste("Predictive" ~ R^2))) + xlab ("Number of Years Predicted") + geom_smooth(method = "lm", se = FALSE, colour ="#00FFCC", lwd = 0.75) + scale_x_continuous(breaks = scales::pretty_breaks(n=6)) + theme_few
timeplot <- ggplot(data = ARMAdata, aes(x = years, y = R2)) + geom_point(shape = "diamond", size = 1.5) + ylab (expression(paste("Predictive" ~ R^2))) + xlab ("Number of Years Predicted") + geom_smooth(method = "lm", se = FALSE, colour ="#00FFCC", lwd = 0.75) + scale_x_continuous(breaks = scales::pretty_breaks(n=6)) + theme_few()
timeplot
timeplot <- ggplot(data = ARMAdata, aes(x = years, y = R2)) + geom_point(size = 1.5) + ylab (expression(paste("Predictive" ~ R^2))) + xlab ("Number of Years Predicted") + geom_smooth(method = "lm", se = FALSE, colour ="purple", lwd = 0.75) + scale_x_continuous(breaks = scales::pretty_breaks(n=6)) + theme_few()
timeplot
timeplot <- ggplot(data = ARMAdata, aes(x = years, y = R2)) + geom_point(size = 1.1) + ylab (expression(paste("Predictive" ~ R^2))) + xlab ("Number of Years Predicted") + geom_smooth(method = "lm", se = FALSE, colour ="purple", lwd = 0.75) + scale_x_continuous(breaks = scales::pretty_breaks(n=6)) + theme_few()
timeplot
timeplot <- ggplot(data = ARMAdata, aes(x = years, y = R2)) + geom_point(alpha=0.5, size = 1.1) + ylab (expression(paste("Predictive" ~ R^2))) + xlab ("Number of Years Predicted") + geom_smooth(method = "lm", se = FALSE, colour ="purple", lwd = 0.75) + scale_x_continuous(breaks = scales::pretty_breaks(n=6)) + theme_few()
timeplot
timeplot <- ggplot(data = ARMAdata, aes(x = years, y = R2)) + geom_point(alpha=0.5, size = 1.1) + ylab (expression(paste("Predictive" ~ R^2))) + xlab ("Number of Years Predicted") + geom_smooth(method = "lm", colour ="purple", lwd = 0.75) + scale_x_continuous(breaks = scales::pretty_breaks(n=6)) + theme_few()
timeplot
lm(formula = years ~ R2, data=ARMAdata)
t.lm <- lm(formula = years ~ R2, data=ARMAdata)
summary(t.lm)
t.lm <- lm(formula = R2 ~ years, data=ARMAdata)
summary(t.lm)
timeplot <- ggplot(data = ARMAdata, aes(x = years, y = R2)) + geom_point(alpha=0.5, size = 1.1) + ylab (expression(paste("Predictive" ~ R^2))) + xlab ("Number of Years Predicted") + geom_smooth(method = "lm", colour ="purple", lwd = 0.75) + scale_x_continuous(breaks = scales::pretty_breaks(n=6)) + theme_few() + annotate("text", x=10, y=0.75, label=R^2)
timeplot
timeplot <- ggplot(data = ARMAdata, aes(x = years, y = R2)) + geom_point(alpha=0.5, size = 1.1) + ylab (expression(paste("Predictive" ~ R^2))) + xlab ("Number of Years Predicted") + geom_smooth(method = "lm", colour ="purple", lwd = 0.75) + scale_x_continuous(breaks = scales::pretty_breaks(n=6)) + theme_few() + annotate("text", x=10, y=0.75, label="R^2"")
timeplot <- ggplot(data = ARMAdata, aes(x = years, y = R2)) + geom_point(alpha=0.5, size = 1.1) + ylab (expression(paste("Predictive" ~ R^2))) + xlab ("Number of Years Predicted") + geom_smooth(method = "lm", colour ="purple", lwd = 0.75) + scale_x_continuous(breaks = scales::pretty_breaks(n=6)) + theme_few() + annotate("text", x=10, y=0.75, label="R^2")
timeplot
timeplot <- ggplot(data = ARMAdata, aes(x = years, y = R2)) + geom_point(alpha=0.5, size = 1.1) + ylab (expression(paste("Predictive" ~ R^2))) + xlab ("Number of Years Predicted") + geom_smooth(method = "lm", colour ="purple", lwd = 0.75) + scale_x_continuous(breaks = scales::pretty_breaks(n=6)) + theme_few() + annotate("text", x=10, y=0.75, label=R^2 ~ "0.1645")
timeplot
timeplot <- ggplot(data = ARMAdata, aes(x = years, y = R2)) + geom_point(alpha=0.5, size = 1.1) + ylab (expression(paste("Predictive" ~ R^2))) + xlab ("Number of Years Predicted") + geom_smooth(method = "lm", colour ="purple", lwd = 0.75) + scale_x_continuous(breaks = scales::pretty_breaks(n=6)) + theme_few() + annotate("text", x=10, y=0.75, label= "R^2 == 0.1645")
timeplot
timeplot <- ggplot(data = ARMAdata, aes(x = years, y = R2)) + geom_point(alpha=0.5, size = 1.1) + ylab (expression(paste("Predictive" ~ R^2))) + xlab ("Number of Years Predicted") + geom_smooth(method = "lm", colour ="purple", lwd = 0.75) + scale_x_continuous(breaks = scales::pretty_breaks(n=6)) + theme_few() + annotate("text", x=10, y=0.75, label= "R^2 == 0.1645", parse=T)
timeplot
View(Cook.plot)
View(Fisher)
lm.Fisher <- lm(formula = change.f ~ change.t, data=Fisher)
summary(lm.Fisher)
Fisher.plot
Fisher.plot.label <-Fisher.plot + annotate("text", x=5, y=0.025, label= "R^2 == 0.5406", parse=T)
Fisher.plot.label
cook.lm <- lm(formula = change.f ~ change.t, data=Cook)
summary(cook.lm)
Cook
Cook.ploy
Cook.plot
Cook.plot.label <-Cook.plot + annotate("text", x=40, y=0.02, label= "R^2 == 0.9086", parse=T)
Cook.plot.label
gill.lm <- lm(formula = change.f ~ change.t, data=Gillespie)
summary(gill.lm)
Gillespie.plot
Gill.plot.label <-Gillespie.plot + annotate("text", x=40, y=0.02, label= "R^2 == 0.1391", parse=T)
Gill.plot.label
grant.lm <- lm(formula = change.f ~ change.t, data=Grant)
summary(grant.lm)
Grant.plot
Grant.plot.label <-Grant.plot + annotate("text", x=40, y=0.02, label= "R^2 == 0.8519", parse=T)
Grant.plot.label
harris.lm <- lm(formula = change.f ~ change.t, data=Harris)
summary(harris.lm)
Harris.plot
Harris.plot.label <-Harris.plot + annotate("text", x=40, y=0.02, label= "R^2 == 0.3944", parse=T)
Harris.plot.label
Johnson.lm <- lm(formula = change.f ~ change.t, data=Johnson)
summary(Johnson.lm)
Johnson.plot
View(Harris)
Johnson.plot.label <-Johnson.plot + annotate("text", x=40, y=0.02, label= "R^2 == 0.1974", parse=T)
Johnson.plot.label
Karrell.lm <- lm(formula = change.f ~ change.t, data=Karrell)
summary(Karrell.lm)
Karrell.plot
Karrell.plot.label <-Karrell.plot + annotate("text", x=40, y=0.02, label= "R^2 == 0.8441", parse=T)
Karrell.plot.label
lepetz.lm <- lm(formula = change.f ~ change.t, data=Lepetz)
summary(lepetz.lm)
Lepetz.plot
Lepetz.plot.label <-Lepetz.plot + annotate("text", x=40, y=0.02, label= "R^2 == 0.04966", parse=T)
Lepetz.plot.label
Rouzic.lm <- lm(formula = change.f ~ change.t, data=Rouzic)
summary(Rouzic.lm)
Rouzic.plot
View(Rouzic)
Fisher.plot <- ggplot(data=Fisher, aes(x=change.t, y= change.f)) +geom_point() + geom_smooth(method="lm", colour="purple") + theme_few() + xlab("Change in Time") + ylab("Change in Dominula Frequency")
Harris.plot <- ggplot(data=Harris, aes(x=change.t, y= change.f)) +geom_point() + geom_smooth(method="lm", colour="purple") + theme_few() + xlab("Change in Time") + ylab("Change in Bridled Frequency")
Gillespie.plot  <- ggplot(data=Gillespie, aes(x=change.t, y= change.f)) +geom_point() + geom_smooth(method="lm", colour="purple") + theme_few() + xlab("Change in Time") + ylab("Change in Unpatterned Frequency")
Johnson.plot <- ggplot(data=Johnson, aes(x=change.t, y= change.f)) +geom_point() + geom_smooth(method="lm", colour="purple") + theme_few() + xlab("Change in Time") + ylab("Change in Unbanded Frequency")
Schemske.plot <- ggplot(data=Schemske, aes(x=change.t, y= change.f)) +geom_point() + geom_smooth(method="lm", colour="purple") + theme_few() + xlab("Change in Time") + ylab("Change in Blue Morph Frequency")
Karrell.plot <- ggplot(data=Karrell, aes(x=change.t, y= change.f)) +geom_point() + geom_smooth(method="lm", colour="purple") + theme_few() + xlab("Change in Time") + ylab("Change in Brown Morph Frequency")
Lepetz.plot <- ggplot(data=Lepetz, aes(x=change.t, y= change.f)) +geom_point() + geom_smooth(method="lm", colour="purple") + theme_few() + xlab("Change in Time") + ylab("Change in Reticulated Frequency")
Grant.plot <- ggplot(data=Grant, aes(x=change.t, y= change.f)) +geom_point() + geom_smooth(method="lm", colour="purple") + theme_few() + xlab("Change in Time") + ylab("Change in Melanic Frequency")
Cook.plot <- ggplot(data=Cook, aes(x=change.t, y= change.f)) +geom_point() + geom_smooth(method="lm", colour="purple") + theme_few() + xlab("Change in Time") + ylab("Change in Carbonaria Frequency")
Rouzic.plot <- ggplot(data=Rouzic, aes(x=change.t, y= change.f)) +geom_point() + geom_smooth(method="lm", colour="purple") + theme_few() + xlab("Change in Time") + ylab("Change in Completely Plated Frequency")
lm.Fisher <- lm(formula = change.f ~ change.t, data=Fisher)
summary(lm.Fisher)
lm.Cook <- lm(formula = change.f ~ change.t, data=Cook)
summary(lm.Cook)
lm.Gillespie <- lm(formula = change.f ~ change.t, data=Gillespie)
summary(lm.Gillespie)
lm.Grant <- lm(formula = change.f ~ change.t, data=Grant)
summary(lm.Grant)
lm.Harris <- lm(formula = change.f ~ change.t, data=Harris)
summary(lm.Harris)
lm.Johnson <- lm(formula = change.f ~ change.t, data=Johnson)
summary(lm.Johnson)
lm.Karrell <- lm(formula = change.f ~ change.t, data=Karrell)
summary(lm.Karrell)
lm.Lepetz <- lm(formula = change.f ~ change.t, data=Lepetz)
summary(lm.Lepetz)
lm.Rouzic <- lm(formula = change.f ~ change.t, data=Rouzic)
summary(lm.Rouzic)
lm.Schemske <- lm(formula = change.f ~ change.t, data=Schemske)
summary(lm.Schemske)
Fisher.plot
Fisher.plot.label <-Fisher.plot + annotate("text", x=5, y=0.025, label= "R^2 == 0.5406", parse=T)
Fisher.plot.label
Cook.plot
Cook.plot.label <-Cook.plot + annotate("text", x=30, y=-0.01, label= "R^2 == 0.9086", parse=T)
Cook.plot.label
Gillespie.plot
Gillespie.plot.label <- Gillespie.plot + annotate("text", x=4, y=-0.2, label= "R^2 == 0.1391", parse=T)
Gillespie.plot.label
Grant.plot
Grant.plot.label <-Grant.plot + annotate("text", x=10, y=0.5, label= "R^2 == 0.8519", parse=T)
Grant.plot.label
Harris.plot
Harris.plot.label <-Harris.plot + annotate("text", x=40, y=0.02, label= "R^2 == 0.3944", parse=T)
Harris.plot.label
Johnson.plot
Johnson.plot.label <-Johnson.plot + annotate("text", x=25, y=0.17, label= "R^2 == 0.1974", parse=T)
Johnson.plot.label
Karrell.plot
Karrell.plot.label <-Karrell.plot + annotate("text", x=30, y=0.07, label= "R^2 == 0.8441", parse=T)
Karrell.plot.label
Lepetz.plot
Lepetz.plot.label <-Lepetz.plot + annotate("text", x=5, y=0.1, label= "R^2 == 0.04966", parse=T)
Lepetz.plot.label
Lepetz.plot.label <-Lepetz.plot + annotate("text", x=5, y=0.15, label= "R^2 == 0.04966", parse=T)
Lepetz.plot.label
Rouzic.plot
Rouzic.plot.label <-Rouzic.plot + annotate("text", x=10, y=0, label= "R^2 == 0.08394", parse=T)
Rouzic.plot.label
Schemske.plot
Schemske.plot.label <- Schemske.plot + annotate("text", x=5, y=-0.02, label= "R^2 == 0.1036", parse=T)
Schemske.plot.label
View(timeplot)
timeplot
library(readxl)
TAll <- read_excel("Meta-Analysis/Raw_Data/Tdata.xlsx",
sheet = "all")
View(TAll)
ggplot(data=TAll, aes(x=change.t, y= change.f)) + geom_point(alpha=0.5, colour ="black") + geom_smooth(method="lm", colour="purple") + theme_few() + xlab("Change in Time") + ylab("Change in Trait Frequency")
Tall.plot <- ggplot(data=TAll, aes(x=change.t, y= change.f)) + geom_point(alpha=0.5, colour ="black") + geom_smooth(method="lm", colour="purple") + theme_few() + xlab("Change in Time") + ylab("Change in Trait Frequency")
Tall.plot
lm.Tall <- lm(formula = change.f ~ change.t, data=TAll)
summary(lm.Tall)
Tall.plot.label <-Tall.plot + annotate("text", x=45, y=0.09, label= "R^2 == 0.2319", parse=T)
Tall.plot.label
Tall.plot.label <-Tall.plot + annotate("text", x=45, y=0.11, label= "R^2 == 0.2319", parse=T)
Tall.plot.label
library(readxl)
ARMAdata <- read_excel("Meta-Analysis/Raw_Data/ARMAdata.xlsx",
sheet = "R values")
View(ARMAdata)
boxplot <- ggplot(data = ARMAdata, aes(x = Paper, y = R)) + geom_boxplot(aes(fill=Paper)) + xlab("Predictive Correlation (R)")
boxplot
boxplot.R2 <- ggplot(data = ARMAdata, aes(x = Paper, y = R2)) + geom_boxplot(aes(fill=Paper)) + ylab (expression(paste("Predictive" ~ R^2))) + scale_fill_brewer(palette = "Spectral")
View(boxplot.R2)
boxplot.R2
boxplot <- ggplot(data = ARMAdata, aes(x = Paper, y = R)) + geom_boxplot(aes(fill=Paper)) + xlab("Predictive Correlation (R)") + scale_fill_brewer(palette = "Spectral") + theme(axis.text.x = element_blank(), axis.ticks.x = element_blank()) + theme_few
library(readxl)
ARMAdata <- read_excel("Meta-Analysis/Raw_Data/ARMAdata.xlsx",
sheet = "R values")
View(ARMAdata)
boxplot <- ggplot(data = ARMAdata, aes(x = Paper, y = R)) + geom_boxplot(aes(fill=Paper)) + xlab("Predictive Correlation (R)") + scale_fill_brewer(palette = "Spectral") + theme(axis.text.x = element_blank(), axis.ticks.x = element_blank()) + theme_few()
boxplot
boxplot <- ggplot(data = ARMAdata, aes(x = Paper, y = R)) + geom_boxplot(aes(fill=Paper)) + xlab("Predictive Correlation (R)")
boxplot
library(readxl)
ARMAdata <- read_excel("Meta-Analysis/Raw_Data/ARMAdata.xlsx",
sheet = "R values")
View(ARMAdata)
boxplot <- ggplot(data = ARMAdata, aes(x = Paper, y = R)) + geom_boxplot(aes(fill=Paper)) + xlab("Predictive Correlation (R)")
library(ggplot)
library(ggplot2)
boxplot <- ggplot(data = ARMAdata, aes(x = Paper, y = R)) + geom_boxplot(aes(fill=Paper)) + xlab("Predictive Correlation (R)")
boxplot
library(ggthemes)
library(colorbrewer)
library(RColorBrewer)
boxplot.R <- ggplot(data = ARMAdata, aes(x = Paper, y = R)) + geom_boxplot(aes(fill=Paper)) + ylab ("Predictive Correlation (R)") + xlab("Data Source") + scale_fill_brewer(palette = "Spectral") + theme_few() + theme(axis.text.x = element_blank(), axis.ticks.x = element_blank())
boxplot.R
boxplot.R <- ggplot(data = ARMAdata, aes(x = Paper, y = R)) + geom_boxplot(aes(fill=Paper)) + ylab ("Predictive Correlation (R)") + xlab("Data Source") + scale_fill_brewer(palette = "Spectral") + theme_few() + theme(axis.text.x = element_blank(), axis.ticks.x = element_blank())
boxplot.R2 <- ggplot(data = ARMAdata, aes(x = Paper, y = R2)) + geom_boxplot(aes(fill=Paper)) + ylab (expression(paste("Predictive" ~ R^2))) + xlab("Data Source") + scale_fill_brewer(palette = "Spectral") + theme_few() + theme(axis.text.x = element_blank(), axis.ticks.x = element_blank())
boxplot.R2
library(readxl)
Tdata <- read_excel("Meta-Analysis/Raw_Data/Tdata.xlsx",
sheet = "all")
View(Tdata)
ggplot(data=Tdata, aes(x=change.t, y= change.f)) +geom_point() + geom_smooth(method="glm", colour="purple") + theme_few() + xlab("Change in Time") + ylab("Change in Trait Frequency")
library(ggplot)
library(ggplot2)
ggplot(data=Tdata, aes(x=change.t, y= change.f)) +geom_point() + geom_smooth(method="glm", colour="purple") + theme_few() + xlab("Change in Time") + ylab("Change in Trait Frequency")
library(ggthemes)
ggplot(data=Tdata, aes(x=change.t, y= change.f)) +geom_point() + geom_smooth(method="glm", colour="purple") + theme_few() + xlab("Change in Time") + ylab("Change in Trait Frequency")
install.packages(nlme)
install.packages("nlme")
library(nlme)
install.packages(arm)
install.packages("arm")
installed.packages("AICcmodavg")
installed.packages("lme4")
library(ggplot2)
library(lme4)
library(arm)
library(AICcmodavg)
lm.test <- lm(change.f ~ change.t, data=Tdata)
lm.test.residuals <- rstandard(lm.test)
plot(lm.test.residuals~Tdata$paper)
plot(lm.test.residuals~Tdata$paper, xlab = "Species", ylab="Standardized residuals")
library(nlme)
attach(Tdata)
lm <- lme(change.f ~ change.t, random = ~1|paper, method = "ML")
lm
lm.1 <- lme(change.f ~ change.t)
lm.1 <- lm(change.f ~ change.t)
anova(lm, lm.1)
library(usethis)
library("usethis")
install.packages("usethis")
library(usethis)
use_git_config(user.name = "janayfox", user.email = "janayfox95@gmail.com")
getwd()
wd
getwd()
# load libraries and functions
library("methylKit")
library(ggplot2)
library(reshape2)
library(emdbook)
library(tidyverse)
library(dplyr)
library(LaCroixColoR)
library(lemon)
#set working directory
setwd("~/Documents/GitHub/Power-analysis")
# using function from Wreczycka et al. 2017
# to simulate data (dataSim2 function)
source("./Scripts/functions/dataSim2.R")
# and a modified function from Wrecyzka et al. 2017
# to run the methylKit model on simulated data
source("./Scripts/functions/runModels.R")
# add in functions that I wrote to extract and convert datasets
source("./Scripts/functions/extractConvert.R")
#set different effect sizes
effects = c(5, 10, 15, 20, 25)
cores=20
#set different replicates
replicates = c(2,4,6,8)
set.seed(111)
#now put each list into a list for every replicate
model.res <-setNames(replicate(length(replicates), list()), replicates)
#set an index to keep track of which replicate loop is on
index=0
#iterate through each replicate
for(replicate in replicates){
# set treatment groups so that 1/2 are 1 (exposed)
# and 1/2 are 0 (control)
treatments = rep(0, replicate/2)
treatments = append(treatments, rep(1,replicate/2))
print(replicate)
# add one to the index for every turn of this loop
index <- index + 1
#iterate through each effect size
for(effect in effects){
# Effect by the treatment
print(effect)
# Generate simulated data using methylKit library and dataSim2 function
sim.methylBase = dataSim2(replicates=replicate,
sites=50000,
treatment=treatments,
percentage=1,
effect=effect,
add.info=TRUE)
# Run models using runModels function and return the matrix
# of true positives (TP), false positives (FP), true negatives (TN)
# and false negatives (FN) along with other evaluations
# add the result of the model to the model.res list
model.res[[index]][as.character(effect)] <- run.models(sim.methylBase, cores=cores,
difference=5, qvalue=0.01)
}}
#set up separate datasets for each type of evaluation using function
sensitivity <- extract.data(model.res, replicates, effects, "sens")
specificity <- extract.data(model.res, replicates, effects, "spec")
f_score <- extract.data(model.res, replicates, effects, "f_score")
accuracy <- extract.data(model.res, replicates, effects, "acc")
false_negatives <- extract.data(model.res, replicates, effects, "FN")
#create function for plotting data
# takes data and y label for inputs
# gives plots as outputs
bar.plot <- function(data, ylabel){
ggplot(data, aes(replicate, eval,fill=effect)) + geom_bar(
stat="identity", colour="black", position="dodge") +
xlab("Sample Size") + ylab(ylabel) + ylim(0,1) + theme_bw() +
theme(axis.text=element_text(size=11), legend.position="none",
axis.title=element_text(size=13)) +
scale_fill_manual(values = lacroix_palette("PassionFruit"))  + labs(fill="Effect Size")
}
#create plots for all evaluation parameters
sensitivity_bar_plot <- bar.plot(sensitivity,"Sensitivity")
specificity_bar_plot <- bar.plot(specificity, "Specificity")
f_score_bar_plot <- bar.plot(f_score, "F-Score")
accuracy_bar_plot <- bar.plot(accuracy, "Accuracy")
#arrange plots in a grid with a shared legend
grid_arrange_shared_legend(sensitivity_bar_plot, specificity_bar_plot, f_score_bar_plot,
accuracy_bar_plot, ncol=2, nrow=2)
